PDF Conversion Tool Documentation
=============================

Project Overview
---------------
This is a comprehensive PDF processing and conversion tool that can handle multiple PDF files, extract their contents, and convert them into various formats including CSV, Markdown, and plain text.

Project Structure
----------------
1. Main Components:
   - main.py: Main entry point and orchestration
   - input_agent.py: Handles PDF input scanning and validation
   - parser_agent.py: Processes PDFs and extracts content
   - preprocessing_agent.py: Cleans and structures extracted data
   - conversion_agent_csv.py: Converts data to CSV format
   - conversion_agent_md.py: Converts data to Markdown format
   - conversion_agent_txt.py: Converts data to plain text format

2. Directory Structure:
   - pdfs/: Input directory for PDF files
   - csv_output/: Output directory for CSV files
   - virtual/: Virtual environment directory
   - __pycache__/: Python cache files

Key Features
-----------
1. PDF Processing:
   - Multi-page PDF support
   - Text extraction
   - Table extraction
   - Form field extraction
   - Metadata extraction
   - Confidence scoring for extracted content

2. Data Conversion:
   - CSV conversion with structured tables
   - Markdown conversion with formatting
   - Plain text conversion
   - JSON intermediate storage

3. Data Processing:
   - Text cleaning and normalization
   - Table structure preservation
   - Form field organization
   - Metadata handling

Working Flow
-----------
1. Input Stage:
   - Scans the 'pdfs' directory for PDF files
   - Validates PDF files
   - Collects metadata about each PDF

2. Parsing Stage:
   - Uses Tesseract OCR for text extraction
   - Extracts tables and forms
   - Processes each page individually
   - Generates confidence scores
   - Saves parsed data to 'combined_parsed_data.json'

3. Preprocessing Stage:
   - Cleans and normalizes extracted text
   - Structures tables and forms
   - Organizes metadata
   - Saves preprocessed data to 'preprocessed_data.json'

4. Conversion Stage:
   - Converts to CSV format (saved in csv_output/)
   - Converts to Markdown format (all_pdfs_combined.md)
   - Converts to plain text format (all_pdfs_combined.txt)

Dependencies
-----------
1. PDF Processing:
   - PyPDF2
   - pdf2image
   - pdfplumber
   - pytesseract

2. Image Processing:
   - opencv-python
   - Pillow

3. Data Processing:
   - pandas
   - numpy

4. Utilities:
   - watchdog
   - dataclasses
   - pathlib
   - typing
   - logging

Usage
-----
1. Place PDF files in the 'pdfs' directory
2. Run main.py
3. Output files will be generated in their respective directories:
   - CSV files in csv_output/
   - Markdown file as all_pdfs_combined.md
   - Text file as all_pdfs_combined.txt

Workflow Diagram
---------------
[Input Stage]
    ↓
[PDF Files in pdfs/]
    ↓
[Input Agent]
    ↓
[Parser Agent (OCR + Extraction)]
    ↓
[Preprocessing Agent]
    ↓
[Conversion Agents]
    ↓
[Output Files (CSV/MD/TXT)]

Notes
-----
- The tool requires Tesseract OCR installed on the system
- PDF files should be placed in the 'pdfs' directory
- All output files are generated in their respective directories
- Intermediate JSON files are created for debugging and inspection 